;*******************************************************************************
; This configuration file is read when Botrix (Bot+Matrix) plugin is loaded.
;
; Warning: if you use escape character '\' to separate string in multiple lines, 
; check that immediately after '\' there is an end of line character, and not 
; space or tab character, this will lead to error hard to detect. In other words
; erase all spaces after '\' character !!!
;*******************************************************************************


;-------------------------------------------------------------------------------
; Bots section. Contains commands that influence bots behaviour.
;-------------------------------------------------------------------------------
[Bots]
names = John, Bob, Bart, James, Charles, Michael, Robert, Daniel, Paul, Mark, George,\
        Steven, Kevin, Jason, Brian, Thomas, Mary, Barbara, Susan, Lisa, Betty, Helen

;names = HeatoN, Johnny_R, Tentpole, SK|Potti, Da Bears, [3D]-Rambo,\
;        Chameleon, moto, Bullseye, Ksharp, bds, Xenon, Volcano, SK|SpawN,\
;        fisker, REAL, i0nZ, f0rest, Ahl, walle, Bloodshot, LeX, Goodfella,\
;        zEx|shaGuar, zEx|sunman, eoL-DarK, ScreaM, esu|Swift, TAU|Griffin,\
;        SK|Brunk, [W.E.W]castro, TAU|Sladek, eoL-XeqtR, [rs]-icesalmon,\
;        [rs]-grasle, GoL | ElemenT, zEx|Ja$pal, [W.E.W]siNNa, SK|Bengan,\
;        [DoP]-Destroyer, GoL | Cozmoz, Rival|Siege, [3D]-Kane, GoL | mysse

; Show bot's intelligence in it's name.
name_with_intelligence = on

;-------------------------------------------------------------------------------
; User access. Used to give to user posibility to execute bot commands.
; The format is <STEAM ID> = <access levels, separated by space> 
; Access levels: 
; - waypoint: give access to show/modify waypoints.
; - bot: give access to add/remove/test bots, show bot's path.
; - config: access to give access to users / show items / show events.
;-------------------------------------------------------------------------------
[User access]
STEAM_ID_LAN = waypoint bot config


;-------------------------------------------------------------------------------
; Mods configuration.
; - games: possible game folders (like 'half-life 2 deathmatch').
; - mods: possible mod folders (normally inside game folders, like cs)
; - bot: type of bot to use with this mod. Implemented (available) bot: hl2dm.
; - teams: possible teams arranged by their number as when using console command 
;          "jointeam". 'unassigned' and 'spectators' are requiered, because they 
;          are used to determine if some player is an enemy of a bot.
; - models following by team name, different from 'unassigned' and 'spectators':
;          are available models for use for that team (comma separated).
;-------------------------------------------------------------------------------
[HalfLife2Deathmatch.mod]
games = half-life 2 deathmatch, source sdk base 2013 multiplayer
mods = hl2mp, mod_hl2mp
bot = hl2dm
teams = unassigned, spectators, combines, rebels
models combines = models/combine_soldier.mdl, \
                  models/combine_soldier_prisonguard.mdl, \
                  models/combine_super_soldier.mdl, \
                  models/police.mdl
models rebels = models/humans/Group03/male_01.mdl, \
                models/humans/Group03/male_02.mdl, \
                models/humans/Group03/male_03.mdl, \
                models/humans/Group03/male_04.mdl, \
                models/humans/Group03/male_05.mdl, \
                models/humans/Group03/male_06.mdl, \
                models/humans/Group03/male_07.mdl, \
                models/humans/Group03/male_08.mdl, \
                models/humans/Group03/male_09.mdl, \
                models/humans/Group03/female_01.mdl, \
                models/humans/Group03/female_02.mdl, \
                models/humans/Group03/female_03.mdl, \
                models/humans/Group03/female_04.mdl, \
                models/humans/Group03/female_06.mdl, \
                models/humans/Group03/female_07.mdl


;-------------------------------------------------------------------------------
; Items are objects that restore health, armor, weapons, ammos and other objects 
; that either can stuck a bot or be throwned by gravity gun.
; - health and armor items have 1 argument, 'use' indicating that you need to be 
;   close and press USE button or number or amount of points that item restores. 
;   Although you can use cvars, it is more accurate.
; - objects can have several arguments, 'normal' or 'respawnable'.
; - object models are part of used to set some object flags:
;       * 'explosive' indicate whether item can explode. This will make bot not 
;         to break it when it stucks with it and also to throw it to enemies. 
;       * 'heavy' keyword is used to indicate that this object can't be picked 
;         up with gravity gun.
;       * 'box' keyword is used to indicate that this object can be used to 
;         climb up.
;-------------------------------------------------------------------------------
[HalfLife2Deathmatch.items.health]
item_healthvial = none ; sk_healthvial
item_healthkit = none ; sk_healthkit
item_healthcharger = use

[HalfLife2Deathmatch.items.armor]
item_battery = none ; sk_battery
item_suitcharger = use

[HalfLife2Deathmatch.items.object]
prop_physics = none
prop_physics_multiplayer = none
prop_physics_respawnable = respawnable

[HalfLife2Deathmatch.items.object.models]
crate = box
oildrum001_explosive.mdl = explosive
car003b_physics.mdl = heavy


;-------------------------------------------------------------------------------
; Weapons for HalfLife2Deathmatch and their parameters.
; If add_clip is specified, picking up weapon will also adds clip size amount 
; of bullets.
;-------------------------------------------------------------------------------
[HalfLife2Deathmatch.weapons]

; Manual / physics.
weapon_physcannon = type physics, preference lowest, delay 500, holster 100, range 0-200?

weapon_stunstick = type manual, preference lowest, delay 1000, range 0-30?, damage 40, holster 1000, team combines

weapon_crowbar = type manual, preference lowest, delay 750, range 0-30?, damage 24, holster 1000, team rebels

; Grenades.
weapon_frag = type remote, preference normal, damage 250, parabolic 50, delay 2000, reload 1000, holster 1000,\
              default_ammo 1, max_ammo 5 

weapon_slam = type remote, preference normal, damage 300, parabolic 50,\
              delay 2500, reload 1000, holster 1000, max_ammo 5  

; Ranged.
weapon_pistol = type pistol, preference lowest, clip 18, damage 8, delay 200, reload 1500?, holster 1000,\
                default_ammo 150, max_ammo 150, ammo item_ammo_pistol 20 item_ammo_pistol_large 100

weapon_357 = type pistol, preference normal, clip 6, damage 75, delay 750, reload 3000?, holster 2000,\
             default_ammo 6, max_ammo 12, ammo item_ammo_357 6 item_ammo_357_large 12

weapon_shotgun = type shotgun, preference normal, clip 6, damage 75, delay 750, reload 500, holster 1000,\
                 default_ammo 6, max_ammo 30, ammo item_box_buckshot 20, range 0-500?,\
                 secondary, same_ammo, bullets 2, damage 150, delay 750, reload 500, range 0-500?

weapon_smg1 = type rifle, preference normal, clip 45, damage 5, delay 100, reload 1500?, holster 1000,\
              default_ammo 45, max_ammo 225, ammo item_ammo_smg1 45 item_ammo_smg1_large 225,\
              secondary, clip 1, damage 200, delay 1000, reload 0, parabolic 50,\
			  default_ammo 0, max_ammo 3, ammo item_ammo_smg1_grenade 1

weapon_ar2 = type rifle, preference high, clip 30, damage 11, delay 100, reload 1500?, holster 1000,\
             default_ammo 30, max_ammo 60, ammo item_ammo_ar2 20 item_ammo_ar2_large 60,\
             secondary, clip 1, damage 100, delay 1000, reload 0,\
             default_ammo 0, max_ammo 3, ammo item_ammo_ar2_altfire 1 

weapon_crossbow = type sniper, preference high, clip 1, damage 100, delay 500, reload 1500?, holster 1000,\
                  default_ammo 4, add_clip, max_ammo 10, ammo item_ammo_crossbow 6,\
				  zoom_distance 500, zoom_time 500

weapon_rpg = type rocket, preference highest, damage 250, delay 2000, reload 1000, holster 1000,\
             default_ammo 3, max_ammo 3, ammo item_rpg_round 1, force_aim 

; Default weapons that player has when respawns.
default = weapon_stunstick, weapon_crowbar, weapon_physcannon, weapon_pistol 168, \
          weapon_smg1 90 0, weapon_frag 2


;-------------------------------------------------------------------------------
; Chat component: will take sentence, replace words by their synonims, try first 
; to check if sentence is a command, if not, will do talking instead of 
; performing that command.
;-------------------------------------------------------------------------------
; In all sentences all words on the right will be replaced to words on the left,
; before proceed with chat commands. TODO.
[Chat.language]
lower case = abcdefghijklmnopqrstuvwxyz 
upper case = ABCDEFGHIJKLMNOPQRSTUVWXYZ
exclamation start =
exclamation end = !
question start =
question end = ?
sentence start = 
sentence end = .
word separator =  


[Chat.replace]
your = ur.
you = u.

you too = u2.

1 = one.
2 = two. too.
3 = three.
4 = four.
5 = five.
6 = six.
7 = seven.
8 = eight.
9 = nine.
10 = ten.

no = don't. do not. dont. won't. will not. wont. can't. can not. cant. \
     should not. shouldn't. shoudnt. would not. wouldn't. wouldnt.   

duck = sit. seat. sit down. crouch.
stand = stand up. get up. arise. rise. uprise.

can = should. would.

attack = kill. engage.
;help = need help. need assistance.


; Available chat sentences.
[Chat.sentences]

; Bot coudn't understand the player.
error = (sorry, $player) (I) can't/don't/couldn't/didn't understand (you/this/that/<what you said>).

;ignore = the, a, an, at, in, is, are,
; Error at comma.
greeting = hello/<hi (there)>/greetings/<(good) morning>/<(good) evening>/<(good) night> , $player.
bye = cya/<see you>/<see ya> (later,) ($player1). goodbye/bye ($player).

busy = (Sorry $player,) <I am>/I'm busy (now/<right now>). (sorry $player,) (I) can't talk/chat now/<right now>.

; Yes/no answers.
affirmative = Yes. Yep. Affirmative.
negative = No. Nope. Negative.

; Answers for action request.
affirm = Yes. Of course.
negate = (sorry $player,) (I) can't help (you) (right now). (sorry $player,) no/<not now>.

call = (<hey,>/<listen,>) $player.
call response = yes? yeah? hm? what? what do you need?

help = (hey,) ($player,) (can you) help (me)? (hey,) ($player,) (I need) help.

stop = (hey,) ($player,) don't move. (hey,) ($player,) stop (moving).\
       (hey,) ($player,) wait. (hey,) ($player,) stay there.
come = (hey,) ($player,) come (here). (hey,) ($player,) stay here/<at my position>.
follow = (hey,) ($player,) follow me/$player1. (hey,) ($player,) escort $player1.
attack = (hey,) ($player,) attack.
no kill = (hey,) ($player,) <don't attack>/<no kill>.
sit down = (hey,) ($player,) sit down.
stand up = (hey,) ($player,) stand up.
jump = (hey,) ($player,) jump.

leave = (<ok,>/<hey,>) ($player,) (you can) go/<go away>/continue/leave (now).\
        (hey,) ($player,) (I) don't need (your) help (anymore).

dont hurt = (Please/hey,) stop it/<hitting me>/<hurting me>/<shooting (at) me>.\
            (Please/hey,) don't hurt/hit/shoot me.


;-------------------------------------------------------------------------------
; BorzhMod chats:
;  - $door_status will be changed by opened/closed.
;  - $door is a number from 1...
;  - $button is a number from 1...
;  - $area is short area description (area-goal, area-room1, area-button5, etc).
;-------------------------------------------------------------------------------
;attention = Attention. Listen (to me). Hear me.
ok = Ok/Okey (, cool/sure). Got it. I understand. I see. Oh my. All right.\
     (It's) good/nice to know (it). Good/Nice/Sure. (I) agree.
done = (Ok,) (<I am>/I'm) done. (Ok,) I (have) finished.
wait = ($player,) (please,) wait until I finish. (Please,) (<don't (do it)>/no,) wait (for me). 
no moves = I'm/<I am> stuck/stucked. I don't know what to/<can I> do. I have nothing (left) to do. What should/can I do?
think = I will (try to) think (now). I (will) need (some time) to think (now). (Please,) let me think (now).

new area = I'm/<I am> at/in new area, (let's) call it $area. 
change area = I'm/<I am> at/in $area.
;area button = I'm/<I am> at/near button $button.
;area door =  I'm/<I am> at/near door $door.

explore = I will investigate/explore <this area>/<the area I'm in (currently)>.
explore new = I will investigate/explore new area.
finish explore = (Ok,) I <(have) finished investigating>/<(have) finished exploring>/<(have) done\
                 exploring>/investigated/explored (<this area>/<the area I'm in (currently)>).

weapon found = I (just) found weapon $weapon.

door found = I (just) found $door_status door $door. <I (can) see>/<I am seeing>/<I'm seeing>\
             $door_status door $door (here/<from here>/<over here>). <I (can) see>/<I am seeing>/<I'm seeing>/<I found> door $door, it is $door_status.
;door check = I will (go) check/see door $door.
door change = Door $door is now $door_status.
door no change = Door $door isn't/<is not>/<has not>/hasn't changed, (it is still $door_status).\
                 Door $door didn't/<did not> change, (it is still $door_status).\
                 Door $door stays/<is (still)> $door_status.

button see = I (can) see (a) button $button (here/<from here>/<over here>). I (have) found (a) button $button. 
button can push = I can push/press/reach it.
button cant push = I can't push/press/reach it.

box found = I (can) see (a) box $box (here/<from here>/<over here>).
box lost = I don't see box $box (anymore). The box $box is no more in this area. The box $box have been moved from this area.

gravity gun have = I have (a) gravity gun to use it.
gravity gun need = I need (a) gravity gun to use it.

wall found = I (can) see (a) wall (here/<from here>/<over here>).
box need = I need (a) box to climb it/<this wall>.

box try = Let's (try to) bring/take (some/a) box to $area.
box I take = I will grab/take (the) box $box (now). I will (try to) use gravity gun on (the) box $box (now).
box you take = $player, (please,) (try to) grab/take (the) box $box (now).\
               $player, (please,) (try to) use gravity gun on (the) box $box (now).
box I drop = I will drop/release box $box (now/here/<near the wall>).\
             I will (try to) put the box $box on the ground (now/<near the wall>).
box you drop = $player, (please,) (try to) drop/release box $box (you are carrying) (now/<near the wall>).\
               $player, (please,) (try to) put the box $box (you are carrying) on the ground (now/<near the wall>).

button weapon = I can/<have weapon to> shoot it.
button no weapon = I can't/<don't have weapon to> shoot it.

door try = Let's/lets <try finding>/<(try to) find> button that opens/closes/toggles door $door.
button try = Let's/lets <try finding>/<(try to) find>/<try figuring out>/<figure out> what/which door/doors opens/closes/toggles button $button.\
             Let's try (<to push>/pushing/activate/<to press>/pressing) button $button.
button try go = Let's/lets <try going>/<(try to) go>/<try figuring out how to go>/<figure out how to go> to (the) button $button.
button door = Let's/lets try <to see>/<to check>/<to figure out>/<to find>/<finding>/<figuring out> if button $button opens/open/closes/close/toggles/toggle/affect/affects door $door.

button toggles = (So,) button $button opens/closes/toggles door $door.
button no toggles = (So,) button $button doesn't/<does not> affect/open/close/toggle/<change state of> door $door.\
                    (So,) button $button isn't/<is not> affecting/opening/closing/toggling/<changing state of> door $door.

button i push = I will (try to) push/press button $button (now).
;button pushed = I (just) pushed/pressed button $button.
button you push = $player, (try to) push/press button $button (now).
button i shoot = I will (try to) shoot button $button (now).
button you shoot = $player, (try to) shoot button $button (now).

;busy? = (hey) ($player,) are you busy/occupied/<doing something> (<right now>/now)?
;need help? = (hey) ($player,) do you (still) need (my) help? (hey) ($player,) do you want me to help you? 

; Commands.
area go = $player, (please/now,) go/move/walk/run/pass to area $area. $player, could you go/move/walk/run/pass to area $area? 
area cant go = I can't reach/<go to (the)>/<move to (the)>/<pass to (the)> area $area.
door go = $player, (please/now,) go/move/walk/run/pass to door $door. $player, could you go/move/walk/run/pass to door $door?
button go = $player, (please/now,) go/move/walk/run/pass to button $button. $player, could you go/move/walk/run/pass to button $button?

cancel task = Let's try doing/<to do> something else (then). We should (try to) do something else (then).
better idea = (Wait,) I have (a) better idea/plan.

found plan = I found/<have founded>/have/<have got> <(a) plan>/<secuence of actions> to reach the goal!


; Answers for a chat command. If chat sentences cannot have answer (like yes/no),
; then it is ommited.
; Possible answers are:
;  - init: initiate conversation with player, all next sentence without name are
;          assumed to be directed to bot.
;  - busy: bot is already talking to someone, so it can't be interrupted.
;  - yes: answer affirmative.
;  - no: answer negative.
; TODO: implement.
[Chat.answers]
greeting = init - greeting, busy - busy
call = init - call response, busy - busy
help = yes - affirm, no - negate, yes - affirmative, no - negative, busy - busy
stop = yes - affirm, no - negate, busy - busy
come = yes - affirm, no - negate, busy - busy
follow = yes - affirm, no - negate, busy - busy
attack = yes - affirm, no - negate, busy - busy
no kill = yes - affirm, no - negate, busy - busy
sit down = yes - affirm, no - negate, busy - busy
stand up = yes - affirm, no - negate, busy - busy
jump = yes - affirm), no - negate), busy - busy
leave = end - bye


[Chat.talk]
; Filter bad words.
LanguageFilter = no 

; Insults and responses.
insult = stupied, fool, idiot, fuck, moron
response = Hey, I am a robot./Are you talking to me?/I feel nothing you know./\
           You can't hurt my feelings, no matter how hard you try./\
           You don't need much of brains to insult a robot./Watch your language./\
           Hey, there could be children in here./Sorry, I can't get the joke./\
           I won't lower myself to the level of the ignorant./Don't do that./\
           This is not funny./I'm calling an admin./I am not talking to you anymore.

hi, hey, hello, good day, good morning, good evening = Hello./Hi %talker./How it's going?/Hey./Heya.
